=head1 NAME

Net::OAuth2::Client - client for OAuth2 access, deprecated interface

=head1 SYNOPSIS

   # This module provides the deprecated interface
   my $client = Net::OAuth2::Client->new(
       $client_id,
       $client_secret,
       site => $site
   );

   my $auth = $client->web_server(
       redirect_path => "$site/auth/facebook/callback"
   );

   # interface since v0.50
   my $client = Net::OAuth2::Profile::WebServer->new(
       client_id     => $client_id,
       client_secret => $client_secret,
       site          => $site
       redirect_uri  => "$site/auth/facebook/callback"
   );

=head1 DESCRIPTION

This module is kept to translate the expired interface into the new
interface.

=head1 METHODS

=head2 Constructors

=over 4

=item Net::OAuth2::Client-E<gt>B<new>(ID, SECRET, OPTIONS)

This object collects all OPTIONS to be used when L<web_server()|Net::OAuth2::Client/"Actions"> creates
a profile.

The ID will be translated into OPTION C<client_id>, and SECRET to
C<client_secret>.

=back

=head2 Accessors

=over 4

=item $obj-E<gt>B<id>()

=item $obj-E<gt>B<secret>()

=item $obj-E<gt>B<user_agent>()

=back

=head2 Actions

=over 4

=item $obj-E<gt>B<password>(OPTIONS)

Create a L<Net::OAuth2::Profile::Password|Net::OAuth2::Profile::Password> object, based on all options
passed with L<new()|Net::OAuth2::Client/"Constructors">, overruled/extended by the OPTIONS passed here.

=item $obj-E<gt>B<web_server>(OPTIONS)

Create a L<Net::OAuth2::Profile::WebServer|Net::OAuth2::Profile::WebServer> object, based on all options
passed with L<new()|Net::OAuth2::Client/"Constructors">, overruled/extended by the OPTIONS passed here.

=back

=head1 SEE ALSO

This module is part of Net-OAuth2 distribution version 0.52,
built on January 15, 2013. Website: F<http://perl.overmeer.net>.

=head1 COPYRIGHTS

Copyrights 2013 on the perl code and the related documentation
 by [Mark Overmeer] for SURFnet bv, The Netherlands.  For other contributors see Changes.

Copyrights 2011-12 by Keith Grennan.

This program is free software; you can redistribute it and/or modify it
under the same terms as Perl itself.
See F<http://www.perl.com/perl/misc/Artistic.html>

